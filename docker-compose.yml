services:

  proxy:
    image: nginx:latest
    container_name: proxy
    ports:
      - "${NGINX_PORT_PROXY:-80}:80"
    volumes:
      - ./proxy-nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - ui
      - web
    networks:
      - dpms-production

  ui:
    build:
      context: ./ui
      dockerfile: ./Dockerfile
    restart: unless-stopped
    networks:
      - dpms-production
    ports:
      - "${NGINX_PORT_UI:-80}:80"

  web:
    build:
      context: ./api
      dockerfile: ./docker-production/nginx/Dockerfile
    restart: unless-stopped
    volumes:
      - laravel-storage-production:/var/www/storage:ro
    networks:
      - dpms-production
    ports:
      - "${NGINX_PORT_API:-80}:80"
    depends_on:
      php-fpm:
        condition: service_healthy
  php-fpm:
    build:
      context: ./api
      dockerfile: ./docker-production/php-fpm/Dockerfile
      target: production
    restart: unless-stopped
    volumes:
      - laravel-storage-production:/var/www/storage
      - ./.env.dpms:/var/www/.env
    env_file:
      - .env
    networks:
      - dpms-production
    healthcheck:
      test: ["CMD-SHELL", "php-fpm-healthcheck || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 3
    depends_on:
      mysql:
        condition: service_healthy
  
  mysql:
    image: mysql:8
    restart: unless-stopped
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD:-secret}
      - MYSQL_DATABASE=${MYSQL_DATABASE:-dpms}
      - MYSQL_USER=${MYSQL_USER:-dpms_user}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD:-secret}
    volumes:
      - mysql-data-production:/var/lib/mysql
    networks:
      - dpms-production
    ports:
    - "3307:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u$$MYSQL_USER", "-p$$MYSQL_PASSWORD"]
      interval: 10s
      timeout: 5s
      retries: 3

networks:
  dpms-production:
    external: true

volumes:
  mysql-data-production:
  laravel-storage-production:
